{"version":3,"sources":["utils/formulas.js","components/Sky.js","utils/constants.js","components/Ground.js","components/CannonPipe.js","components/CannonBase.js","components/Canvas.js","App.js","containers/Game.js","actions/index.js","reducers/moveObjects.js","reducers/index.js","serviceWorker.js","index.js"],"names":["pathFromBezierCurve","cubicBezierCurve","initialAxis","initialControlPoint","endingControlPoint","endingAxis","x","y","calculateAngle","x1","y1","x2","y2","quotient","Math","atan","PI","Sky","style","fill","skyWidth","width","height","Ground","id","data-name","groundWidth","stroke","strokeWidth","CannonPipe","props","cannonPipeStyle","transform","rotation","d","CannonBase","cannonBaseStyle","Canvas","angle","trackMouse","viewBox","window","innerWidth","innerHeight","preserveAspectRatio","onMouseMove","App","self","this","setInterval","moveObjects","canvasMousePosition","event","svg","document","getElementById","point","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getCanvasPosition","Component","Game","connect","state","dispatch","mousePosition","type","action","initialState","reducer","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39ecc6d3.chunk.js","sourcesContent":["export const pathFromBezierCurve = (cubicBezierCurve) => {\r\n    const {\r\n        initialAxis, initialControlPoint, endingControlPoint, endingAxis,\r\n    } = cubicBezierCurve;\r\n    return `\r\n      M${initialAxis.x} ${initialAxis.y}\r\n      c ${initialControlPoint.x} ${initialControlPoint.y}\r\n      ${endingControlPoint.x} ${endingControlPoint.y}\r\n      ${endingAxis.x} ${endingAxis.y}\r\n    `;\r\n};\r\n\r\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);\r\n\r\n// https://math.stackexchange.com/questions/714378/find-the-angle-that-creating-with-y-axis-in-degrees\r\nexport const calculateAngle = (x1, y1, x2, y2) => {\r\n    if (x2 >= 0 && y2 >= 0) {\r\n        return 90;\r\n    } else if (x2 < 0 && y2 >= 0) {\r\n        return -90;\r\n    }\r\n\r\n    const dividend = x2 - x1;\r\n    const divisor = y2 - y1;\r\n    const quotient = dividend / divisor;\r\n    return radiansToDegrees(Math.atan(quotient)) * -1;\r\n};\r\n\r\nexport const getCanvasPosition = (event) => {\r\n    // mouse position on auto-scaling canvas\r\n    // https://stackoverflow.com/a/10298843/1232793\r\n\r\n    const svg = document.getElementById('aliens-go-home-canvas');\r\n    const point = svg.createSVGPoint();\r\n\r\n    point.x = event.clientX;\r\n    point.y = event.clientY;\r\n    const { x, y } = point.matrixTransform(svg.getScreenCTM().inverse());\r\n    return { x, y };\r\n};","import React from 'react';\r\nimport { skyAndGroundWidth } from '../utils/constants';\r\n\r\nconst Sky = () => {\r\n    const skyStyle = {\r\n        fill: '#30abef',\r\n    };\r\n    const skyWidth = skyAndGroundWidth;\r\n    const gameHeight = 1200;\r\n    return (\r\n        <rect\r\n            style={skyStyle}\r\n            x={skyWidth / -2}\r\n            y={100 - gameHeight}\r\n            width={skyWidth}\r\n            height={gameHeight}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Sky;","export const skyAndGroundWidth = 5000;","import React from 'react';\r\nimport { skyAndGroundWidth } from '../utils/constants';\r\n\r\nconst Ground = () => {\r\n    const groundStyle = {\r\n        fill: '#59a941',\r\n    };\r\n    const division = {\r\n        stroke: '#458232',\r\n        strokeWidth: '3px',\r\n    };\r\n\r\n    const groundWidth = skyAndGroundWidth;\r\n\r\n    return (\r\n        <g id=\"ground\">\r\n            <rect\r\n                id=\"ground-2\"\r\n                data-name=\"ground\"\r\n                style={groundStyle}\r\n                x={groundWidth / -2}\r\n                y={0}\r\n                width={groundWidth}\r\n                height={100}\r\n            />\r\n            <line\r\n                x1={groundWidth / -2}\r\n                y1={0}\r\n                x2={groundWidth / 2}\r\n                y2={0}\r\n                style={division}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nexport default Ground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { pathFromBezierCurve } from '../utils/formulas';\r\n\r\nconst CannonPipe = (props) => {\r\n    const cannonPipeStyle = {\r\n        fill: '#999',\r\n        stroke: '#666',\r\n        strokeWidth: '2px',\r\n    };\r\n    const transform = `rotate(${props.rotation}, 0, 0)`;\r\n\r\n    const muzzleWidth = 40;\r\n    const halfMuzzle = 20;\r\n    const height = 100;\r\n    const yBasis = 70;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis: {\r\n            x: -halfMuzzle,\r\n            y: -yBasis,\r\n        },\r\n        initialControlPoint: {\r\n            x: -40,\r\n            y: height * 1.7,\r\n        },\r\n        endingControlPoint: {\r\n            x: 80,\r\n            y: height * 1.7,\r\n        },\r\n        endingAxis: {\r\n            x: muzzleWidth,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <g transform={transform}>\r\n            <path\r\n                style={cannonPipeStyle}\r\n                d={pathFromBezierCurve(cubicBezierCurve)}\r\n            />\r\n            <line\r\n                x1={-halfMuzzle}\r\n                y1={-yBasis}\r\n                x2={halfMuzzle}\r\n                y2={-yBasis}\r\n                style={cannonPipeStyle}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nCannonPipe.propTypes = {\r\n    rotation: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CannonPipe;","import React from 'react';\r\nimport { pathFromBezierCurve } from '../utils/formulas';\r\n\r\nconst CannonBase = (props) => {\r\n    const cannonBaseStyle = {\r\n        fill: '#a16012',\r\n        stroke: '#75450e',\r\n        strokeWidth: '2px',\r\n    };\r\n\r\n    const baseWith = 80;\r\n    const halfBase = 40;\r\n    const height = 60;\r\n    const negativeHeight = height * -1;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis: {\r\n            x: -halfBase,\r\n            y: height,\r\n        },\r\n        initialControlPoint: {\r\n            x: 20,\r\n            y: negativeHeight,\r\n        },\r\n        endingControlPoint: {\r\n            x: 60,\r\n            y: negativeHeight,\r\n        },\r\n        endingAxis: {\r\n            x: baseWith,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <g>\r\n            <path\r\n                style={cannonBaseStyle}\r\n                d={pathFromBezierCurve(cubicBezierCurve)}\r\n            />\r\n            <line\r\n                x1={-halfBase}\r\n                y1={height}\r\n                x2={halfBase}\r\n                y2={height}\r\n                style={cannonBaseStyle}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nexport default CannonBase;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sky from './Sky';\r\nimport Ground from './Ground';\r\nimport CannonPipe from './CannonPipe';\r\nimport CannonBase from './CannonBase';\r\n\r\nconst Canvas = ({ angle, trackMouse }) => {\r\n    const viewBox = [window.innerWidth / -2, 100 - window.innerHeight, window.innerWidth, window.innerHeight];\r\n\r\n    return (\r\n        <svg\r\n            id=\"aliens-go-home-canvas\"\r\n            preserveAspectRatio=\"xMaxYMax none\"\r\n            onMouseMove={trackMouse}\r\n            viewBox={viewBox}\r\n        >\r\n            <Sky />\r\n            <Ground />\r\n            <CannonPipe rotation={angle} />\r\n            <CannonBase />\r\n        </svg>\r\n    );\r\n};\r\n\r\nCanvas.propTypes = {\r\n    angle: PropTypes.number.isRequired,\r\n    trackMouse: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Canvas;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCanvasPosition } from './utils/formulas';\nimport Canvas from './components/Canvas';\n\nclass App extends Component {\n    componentDidMount() {\n        const self = this;\n        setInterval(() => {\n            self.props.moveObjects(self.canvasMousePosition);\n        }, 10);\n    }\n\n    trackMouse(event) {\n        this.canvasMousePosition = getCanvasPosition(event);\n    }\n\n    render() {\n        return (\n            <Canvas\n                angle={this.props.angle}\n                trackMouse={event => (this.trackMouse(event))}\n            />\n        );\n    }\n}\n\nApp.propTypes = {\n    angle: PropTypes.number.isRequired,\n    moveObjects: PropTypes.func.isRequired,\n};\n\nexport default App;","import { connect } from 'react-redux';\r\n\r\nimport App from '../App';\r\nimport { moveObjects } from '../actions/index';\r\n\r\nconst mapStateToProps = state => ({\r\n    angle: state.angle,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    moveObjects: (mousePosition) => {\r\n        dispatch(moveObjects(mousePosition));\r\n    },\r\n});\r\n\r\nconst Game = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(App);\r\n\r\nexport default Game;","export const MOVE_OBJECTS = 'MOVE_OBJECTS';\r\n\r\nexport const moveObjects = mousePosition => ({\r\n    type: MOVE_OBJECTS,\r\n    mousePosition,\r\n});","import { calculateAngle } from '../utils/formulas';\r\n\r\nfunction moveObjects(state, action) {\r\n    if (!action.mousePosition) return state;\r\n\r\n    const { x, y } = action.mousePosition;\r\n    const angle = calculateAngle(0, 0, x, y);\r\n    return {\r\n        ...state,\r\n        angle,\r\n    };\r\n}\r\n\r\nexport default moveObjects;","import { MOVE_OBJECTS } from \"../actions\";\r\nimport moveObjects from './moveObjects';\r\n\r\nconst initialState = {\r\n    angle: 45\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case MOVE_OBJECTS:\r\n            return moveObjects(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport Game from './containers/Game';\nimport reducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Game />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}